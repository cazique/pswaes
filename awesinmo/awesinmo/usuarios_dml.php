<?php

// Data functions (insert, update, delete, form) for table usuarios

// This script and data application was generated by AppGini, https://bigprof.com/appgini
// Download AppGini for free from https://bigprof.com/appgini/download/

function usuarios_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('usuarios');
	if(!$arrPerm['insert']) {
		$error_message = $Translation['no insert permission'];
		return false;
	}

	$data = [
		'usuario_id' => Request::val('usuario_id', ''),
		'nombre' => Request::val('nombre', ''),
		'apellidos' => Request::val('apellidos', ''),
		'nombre_completo' => Request::val('nombre_completo', ''),
		'email' => Request::val('email', ''),
		'telefono' => Request::val('telefono', ''),
		'puesto' => Request::val('puesto', ''),
		'agencia_id' => Request::val('agencia_id', ''),
		'activo' => Request::val('activo', '1'),
		'fecha_alta' => Request::dateComponents('fecha_alta', 'curdate()'),
		'ultima_conexion' => Request::datetime('ultima_conexion', ''),
	];

	// record owner is current user
	$recordOwner = getLoggedMemberID();

	$recID = tableInsert('usuarios', $data, $recordOwner, $error_message);

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID')) && $recID !== false)
		usuarios_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function usuarios_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);
	$currentUsername = getLoggedMemberID();
	$errorMessage = '';

	// launch requests, asynchronously
	curl_batch($requests);
}

function usuarios_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('usuarios', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: usuarios_before_delete
	if(function_exists('usuarios_before_delete')) {
		$args = [];
		if(!usuarios_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: ''
			);
	}

	sql("DELETE FROM `usuarios` WHERE `usuario_id`='{$selected_id}'", $eo);

	// hook: usuarios_after_delete
	if(function_exists('usuarios_after_delete')) {
		$args = [];
		usuarios_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='usuarios' AND `pkValue`='{$selected_id}'", $eo);
}

function usuarios_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('usuarios', $selected_id, 'edit')) return false;

	$data = [
		'usuario_id' => Request::val('usuario_id', ''),
		'nombre' => Request::val('nombre', ''),
		'apellidos' => Request::val('apellidos', ''),
		'nombre_completo' => Request::val('nombre_completo', ''),
		'email' => Request::val('email', ''),
		'telefono' => Request::val('telefono', ''),
		'puesto' => Request::val('puesto', ''),
		'agencia_id' => Request::val('agencia_id', ''),
		'activo' => Request::val('activo', ''),
		'fecha_alta' => Request::dateComponents('fecha_alta', ''),
		'ultima_conexion' => Request::datetime('ultima_conexion', ''),
	];

	if($data['usuario_id'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Usuario id': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['nombre'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Nombre': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	if($data['apellidos'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Apellidos': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('usuarios', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: usuarios_before_update
	if(function_exists('usuarios_before_update')) {
		$args = ['old_data' => $old_data];
		if(!usuarios_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'usuarios',
		backtick_keys_once($set),
		['`usuario_id`' => $selected_id],
		$error_message
	)) {
		echo $error_message;
		echo '<a href="usuarios_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}

	$data['selectedID'] = $data['usuario_id'];
	$newID = $data['usuario_id'];

	update_calc_fields('usuarios', $data['selectedID'], calculated_fields()['usuarios']);

	// hook: usuarios_after_update
	if(function_exists('usuarios_after_update')) {
		if($row = getRecord('usuarios', $data['selectedID'])) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['usuario_id'];
		$args = ['old_data' => $old_data];
		if(!usuarios_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update record update timestamp
	set_record_owner('usuarios', $selected_id);

	// if PK value changed, update ownership and $selected_id
	if($selected_id != $newID) {
		update('membership_userrecords', ['pkValue' => $newID], ['pkValue' => $selected_id, 'tableName' => 'usuarios']);
		$selected_id = $newID;
	}
}

function usuarios_form($selectedId = '', $allowUpdate = true, $allowInsert = true, $allowDelete = true, $separateDV = true, $templateDV = '', $templateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selectedId. If $selectedId
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = $row = $urow = $jsReadOnly = $jsEditable = $lookups = null;
	$noSaveAsCopy = false;
	$hasSelectedId = strlen($selectedId) > 0;

	// mm: get table permissions
	$arrPerm = getTablePermissions('usuarios');
	$allowInsert = ($arrPerm['insert'] ? true : false);
	$allowUpdate = $hasSelectedId && check_record_permission('usuarios', $selectedId, 'edit');
	$allowDelete = $hasSelectedId && check_record_permission('usuarios', $selectedId, 'delete');

	if(!$allowInsert && !$hasSelectedId)
		// no insert permission and no record selected
		// so show access denied error -- except if TVDV: just hide DV
		return $separateDV ? $Translation['tableAccessDenied'] : '';

	if($hasSelectedId && !check_record_permission('usuarios', $selectedId, 'view'))
		return $Translation['tableAccessDenied'];

	// print preview?
	$dvprint = $hasSelectedId && Request::val('dvprint_x') != '';

	$showSaveNew = !$dvprint && ($allowInsert && !$hasSelectedId);
	$showSaveChanges = !$dvprint && $allowUpdate && $hasSelectedId;
	$showDelete = !$dvprint && $allowDelete && $hasSelectedId;
	$showSaveAsCopy = !$dvprint && ($allowInsert && $hasSelectedId && !$noSaveAsCopy);
	$fieldsAreEditable = !$dvprint && (($allowInsert && !$hasSelectedId) || ($allowUpdate && $hasSelectedId) || $showSaveAsCopy);


	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: fecha_alta
	$combo_fecha_alta = new DateCombo;
	$combo_fecha_alta->DateFormat = "dmy";
	$combo_fecha_alta->MinYear = defined('usuarios.fecha_alta.MinYear') ? constant('usuarios.fecha_alta.MinYear') : 1900;
	$combo_fecha_alta->MaxYear = defined('usuarios.fecha_alta.MaxYear') ? constant('usuarios.fecha_alta.MaxYear') : 2100;
	$combo_fecha_alta->DefaultDate = parseMySQLDate('curdate()', 'curdate()');
	$combo_fecha_alta->MonthNames = $Translation['month names'];
	$combo_fecha_alta->NamePrefix = 'fecha_alta';

	if($hasSelectedId) {
		if(!($row = getRecord('usuarios', $selectedId))) {
			return error_message($Translation['No records found'], 'usuarios_view.php', false);
		}
		$combo_fecha_alta->DefaultDate = $row['fecha_alta'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
	}

	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$templateDVP}") ? "./{$templateDVP}" : './templates/usuarios_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$templateDV}") ? "./{$templateDV}" : './templates/usuarios_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($showSaveNew) {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
	} elseif($showSaveAsCopy) {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = 'return true;';
	}

	if($hasSelectedId) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($allowUpdate)
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

		if($allowDelete)
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$allowInsert
			&& !$allowUpdate && !$allowDelete && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>',
				'<button
					type="submit"
					class="btn btn-default"
					id="deselect"
					name="deselect_x"
					value="1"
					onclick="' . $backAction . '"
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(!$fieldsAreEditable) {
		$jsReadOnly = '';
		$jsReadOnly .= "\t\$j('#usuario_id').replaceWith('<div class=\"form-control-static\" id=\"usuario_id\">' + (\$j('#usuario_id').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#nombre').replaceWith('<div class=\"form-control-static\" id=\"nombre\">' + (\$j('#nombre').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#apellidos').replaceWith('<div class=\"form-control-static\" id=\"apellidos\">' + (\$j('#apellidos').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#nombre_completo').replaceWith('<div class=\"form-control-static\" id=\"nombre_completo\">' + (\$j('#nombre_completo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#email').replaceWith('<div class=\"form-control-static\" id=\"email\">' + (\$j('#email').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#telefono').replaceWith('<div class=\"form-control-static\" id=\"telefono\">' + (\$j('#telefono').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#puesto').replaceWith('<div class=\"form-control-static\" id=\"puesto\">' + (\$j('#puesto').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#agencia_id').replaceWith('<div class=\"form-control-static\" id=\"agencia_id\">' + (\$j('#agencia_id').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#activo').replaceWith('<div class=\"form-control-static\" id=\"activo\">' + (\$j('#activo').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('#fecha_alta').prop('readonly', true);\n";
		$jsReadOnly .= "\t\$j('#fecha_altaDay, #fecha_altaMonth, #fecha_altaYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\t\$j('#ultima_conexion').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"ultima_conexion\">' + (\$j('#ultima_conexion').val() || '') + '</div>');\n";
		$jsReadOnly .= "\t\$j('.select2-container').hide();\n";

		$noUploads = true;
	} else {
		// temporarily disable form change handler till time and datetime pickers are enabled
		$jsEditable = "\t\$j('form').eq(0).data('already_changed', true);";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\t\$j('#ultima_conexion').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$jsEditable .= "\t\$j('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace(
		'<%%COMBO(fecha_alta)%%>',
		(!$fieldsAreEditable ?
			'<div class="form-control-static">' . $combo_fecha_alta->GetHTML(true) . '</div>' :
			$combo_fecha_alta->GetHTML()
		), $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(fecha_alta)%%>', $combo_fecha_alta->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = [];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if(($pt_perm['view'] && isDetailViewEnabled($ptfc[0])) || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(usuario_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nombre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(apellidos)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nombre_completo)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(email)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(telefono)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(puesto)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agencia_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(activo)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(fecha_alta)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(ultima_conexion)%%>', '', $templateCode);

	// process values
	if($hasSelectedId) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(usuario_id)%%>', safe_html($urow['usuario_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(usuario_id)%%>', html_attr($row['usuario_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(usuario_id)%%>', urlencode($urow['usuario_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nombre)%%>', safe_html($urow['nombre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nombre)%%>', html_attr($row['nombre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre)%%>', urlencode($urow['nombre']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(apellidos)%%>', safe_html($urow['apellidos']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(apellidos)%%>', html_attr($row['apellidos']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(apellidos)%%>', urlencode($urow['apellidos']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nombre_completo)%%>', safe_html($urow['nombre_completo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nombre_completo)%%>', html_attr($row['nombre_completo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre_completo)%%>', urlencode($urow['nombre_completo']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(email)%%>', safe_html($urow['email']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(email)%%>', html_attr($row['email']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(email)%%>', urlencode($urow['email']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(telefono)%%>', safe_html($urow['telefono']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(telefono)%%>', html_attr($row['telefono']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(telefono)%%>', urlencode($urow['telefono']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(puesto)%%>', safe_html($urow['puesto']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(puesto)%%>', html_attr($row['puesto']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(puesto)%%>', urlencode($urow['puesto']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agencia_id)%%>', safe_html($urow['agencia_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agencia_id)%%>', html_attr($row['agencia_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agencia_id)%%>', urlencode($urow['agencia_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(activo)%%>', safe_html($urow['activo']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(activo)%%>', html_attr($row['activo']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(activo)%%>', urlencode($urow['activo']), $templateCode);
		$templateCode = str_replace('<%%VALUE(fecha_alta)%%>', app_datetime($row['fecha_alta']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fecha_alta)%%>', urlencode(app_datetime($urow['fecha_alta'])), $templateCode);
		$templateCode = str_replace('<%%VALUE(ultima_conexion)%%>', app_datetime($row['ultima_conexion'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ultima_conexion)%%>', urlencode(app_datetime($urow['ultima_conexion'], 'dt')), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(usuario_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(usuario_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nombre)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(apellidos)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(apellidos)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nombre_completo)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nombre_completo)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(email)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(email)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(telefono)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(telefono)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(puesto)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(puesto)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agencia_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agencia_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(activo)%%>', '1', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(activo)%%>', urlencode('1'), $templateCode);
		$templateCode = str_replace('<%%VALUE(fecha_alta)%%>', 'curdate()', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(fecha_alta)%%>', urlencode('curdate()'), $templateCode);
		$templateCode = str_replace('<%%VALUE(ultima_conexion)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ultima_conexion)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$hasSelectedId) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('usuarios');
	if($hasSelectedId) {
		$jdata = get_joined_record('usuarios', $selectedId);
		if($jdata === false) $jdata = get_defaults('usuarios');
		$rdata = $row;
	}
	$templateCode .= loadView('usuarios-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: usuarios_dv
	if(function_exists('usuarios_dv')) {
		$args = [];
		usuarios_dv(($hasSelectedId ? $selectedId : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}